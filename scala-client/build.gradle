
buildscript {
  repositories { jcenter() }

  dependencies {
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
  }
}

/*
  The scala and idea plugins appear to be incompatible.  With a minimal build.gradle just pulling
  in those two plugins, get error
  > Failed to apply plugin [id 'org.gradle.idea']
   > Task with name 'ideaProject' not found in root project 'couchbase-jvm-clients'.
   with Gradle 4.10 and 5.1.
 */

version = '1.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'nebula.optional-base'
apply plugin: 'maven-publish'

sourceSets {
  integrationTest {
//          {
    scala {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/integrationTest/scala')
//    }
//      resources.srcDir file('src/integrationTest/resources')
//  }
    }
  }
    
  test {
    scala {
      srcDirs = ['src/test/scala', 'src/integrationTest/scala']
    }
  }
}

//idea {
//  module {
////    testSourceDirs += sourceSets.integrationTest.scala.srcDirs
//    testSourceDirs += sourceSets.integrationTest
////    testResourceDirs += sourceSets.integrationTest.resources.srcDirs
////    scopes.TEST.plus += [ configurations.integrationTestCompile ]
//  }
//}

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test



//task integrationTest(type: Test) {
//  description = 'Runs the integration tests.'
//  group = 'verification'
//  testClassesDirs = sourceSets.integrationTest.output.classesDirs
//  classpath = sourceSets.integrationTest.runtimeClasspath
//  outputs.upToDateWhen { false }
//  mustRunAfter test
//}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'scala-client'
      from components.java
//      artifact sourcesLearn Git and GitHub without any code!

//      artifact javadocJar
      pom {
        name = 'scala-client'
        // TODO
        description = 'A concise description of my library'
        url = 'http://www.example.com/library'
        licenses {
          // TODO
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'grahamp'
            name = 'Graham Pople'
            email = 'graham.pople@couchbase.com'
          }
        }
//        scm {
//          connection = 'scm:git:git://example.com/my-library.git'
//          developerConnection = 'scm:git:ssh://example.com/my-library.git'
//          url = 'http://example.com/my-library/'
//        }
      }
    }
  }
  repositories {
    maven {
      // change URLs to point to your repos, e.g. http://my.org/repo
//      def releasesRepoUrl = "$buildDir/repos/releases"
//      def snapshotsRepoUrl = "$buildDir/repos/snapshots"
//      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
    }
  }
}

//signing {
//  sign publishing.publications.mavenJava
//}


javadoc {
  if(JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }
}
task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

//artifacts {
//  archives sourcesJar
//  archives javadocJar
//}


compileScala.targetCompatibility = 1.8
ScalaCompileOptions.metaClass.useAnt = false

dependencies {
  compile "io.projectreactor:reactor-scala-extensions_2.12:0.3.5"
  implementation group: 'io.projectreactor.addons', name: 'reactor-adapter', version: '3.2.0.RELEASE'
  compile 'org.scala-lang.modules:scala-java8-compat_2.12:0.9.0'
  implementation 'io.reactivex:rxjava-reactive-streams:1.2.1'
  compile project(':scala-implicits')

  testCompile group: 'org.scalacheck', name: 'scalacheck_2.12', version: '1.14.0'
  testCompile 'org.scalatest:scalatest_2.12:3.0.5'

  testCompile 'org.junit.jupiter:junit-jupiter-api:5.4.0'
  testCompile 'org.junit.jupiter:junit-jupiter-params:5.4.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
}
